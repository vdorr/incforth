#do not edit this file, it's autogenerated using mkasmdef.sh - edit that instead
regs={}
R_F=0x00
regs["R_F"]=R_F
R_R=0x01
regs["R_R"]=R_R
R_RB=0x02
regs["R_RB"]=R_RB
R_DB=0x03
regs["R_DB"]=R_DB
R_D=0x04
regs["R_D"]=R_D
R_HEAPB=0x05
regs["R_HEAPB"]=R_HEAPB
R_HEAPT=0x06
regs["R_HEAPT"]=R_HEAPT
asm={}
OPARG_NONE = 1
OPARG_1WORD = 2
OPARG_REG = 3
OPARG_DWORD = 4
OPARG_BYTE = 5
OP_XOR=		0x00
asm["OP_XOR"]=(OP_XOR, OPARG_NONE)
OP_ADD=		0x01
asm["OP_ADD"]=(OP_ADD, OPARG_NONE)
OP_SUB=		0x02
asm["OP_SUB"]=(OP_SUB, OPARG_NONE)
OP_MUL=		0x03
asm["OP_MUL"]=(OP_MUL, OPARG_NONE)
OP_DIVMOD=	0x04
asm["OP_DIVMOD"]=(OP_DIVMOD, OPARG_NONE)
OP_OR=		0x05
asm["OP_OR"]=(OP_OR, OPARG_NONE)
OP_AND=		0x06
asm["OP_AND"]=(OP_AND, OPARG_NONE)
OP_NOT=		0x07
asm["OP_NOT"]=(OP_NOT, OPARG_NONE)
OP_CE=		0x08
asm["OP_CE"]=(OP_CE, OPARG_NONE)
OP_CL=		0x09
asm["OP_CL"]=(OP_CL, OPARG_NONE)
OP_CH=		0x0a
asm["OP_CH"]=(OP_CH, OPARG_NONE)
OP_RJMP=		0x0b
asm["OP_RJMP"]=(OP_RJMP, OPARG_1WORD)
OP_CRJMP=		0x0c
asm["OP_CRJMP"]=(OP_CRJMP, OPARG_1WORD)
OP_ACALL=		0x0d
asm["OP_ACALL"]=(OP_ACALL, OPARG_NONE)
OP_RETURN=	0x0e
asm["OP_RETURN"]=(OP_RETURN, OPARG_NONE)
OP_SYSRQ=		0x0f
asm["OP_SYSRQ"]=(OP_SYSRQ, OPARG_NONE)
OP_PUSH=		0x10
asm["OP_PUSH"]=(OP_PUSH, OPARG_1WORD)
OP_DROP=		0x11
asm["OP_DROP"]=(OP_DROP, OPARG_NONE)
OP_SWAP=		0x12
asm["OP_SWAP"]=(OP_SWAP, OPARG_NONE)
OP_ROT=		0x13
asm["OP_ROT"]=(OP_ROT, OPARG_NONE)
OP_OVER=		0x14
asm["OP_OVER"]=(OP_OVER, OPARG_NONE)
OP_DUP=		0x15
asm["OP_DUP"]=(OP_DUP, OPARG_NONE)
OP_FETCHREG=	0x16
asm["OP_FETCHREG"]=(OP_FETCHREG, OPARG_REG)
OP_STOREREG=	0x17
asm["OP_STOREREG"]=(OP_STOREREG, OPARG_REG)
OP_FETCHW=	0x18
asm["OP_FETCHW"]=(OP_FETCHW, OPARG_NONE)
OP_STOREW=	0x19
asm["OP_STOREW"]=(OP_STOREW, OPARG_NONE)
OP_FETCHB=	0x1a
asm["OP_FETCHB"]=(OP_FETCHB, OPARG_NONE)
OP_STOREB=	0x1b
asm["OP_STOREB"]=(OP_STOREB, OPARG_NONE)
OP_RFETCH=	0x1c
asm["OP_RFETCH"]=(OP_RFETCH, OPARG_NONE)
OP_FROMR=		0x1d
asm["OP_FROMR"]=(OP_FROMR, OPARG_NONE)
OP_TOR=		0x1e
asm["OP_TOR"]=(OP_TOR, OPARG_NONE)
OP_NOP=		0x1f
asm["OP_NOP"]=(OP_NOP, OPARG_NONE)
OP_HALT=		0x20
asm["OP_HALT"]=(OP_HALT, OPARG_NONE)
OP_TRAP=		0x21
asm["OP_TRAP"]=(OP_TRAP, OPARG_NONE)
OP_LOOP=		0x22
asm["OP_LOOP"]=(OP_LOOP, OPARG_1WORD)
OP_LSL=		0x23
asm["OP_LSL"]=(OP_LSL, OPARG_NONE)
OP_LSR=		0x24
asm["OP_LSR"]=(OP_LSR, OPARG_NONE)
OP_CRJMPN=	0x25
asm["OP_CRJMPN"]=(OP_CRJMPN, OPARG_1WORD)
OP_DPICK=		0x26
asm["OP_DPICK"]=(OP_DPICK, OPARG_NONE)
OP_FPICK=		0x27
asm["OP_FPICK"]=(OP_FPICK, OPARG_NONE)
OP_MOVE=		0x28
asm["OP_MOVE"]=(OP_MOVE, OPARG_NONE)
OP_PUSHDW=	0x29
asm["OP_PUSHDW"]=(OP_PUSHDW, OPARG_DWORD)
OP_FETCHDW=	0x2a
asm["OP_FETCHDW"]=(OP_FETCHDW, OPARG_NONE)
OP_STOREDW=	0x2b
asm["OP_STOREDW"]=(OP_STOREDW, OPARG_NONE)
OP_FSET=		0x2c
asm["OP_FSET"]=(OP_FSET, OPARG_NONE)
OP_RROT=		0x2d
asm["OP_RROT"]=(OP_RROT, OPARG_NONE)
OP_PUSHB=		0x2e
asm["OP_PUSHB"]=(OP_PUSHB, OPARG_BYTE)
OP_CACHE=		0x2f
asm["OP_CACHE"]=(OP_CACHE, OPARG_NONE)
